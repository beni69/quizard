generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "cockroachdb"
    url      = env("DATABASE_URL")
}

model AuthUser {
    // required by lucia
    id      String    @id @unique
    auth_session AuthSession[]
    auth_key     AuthKey[]

    // custom user attributes
    email     String   @unique
    name      String   @unique
    avatar    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    sets LearningSet[]

    @@map("auth_user")
}

model AuthKey {
    id              String  @id @unique
    hashed_password String?
    user_id         String
    primary_key         Boolean
    expires         BigInt?

    auth_user AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
    @@map("auth_key")
}

model AuthSession {
    id             String @id @unique
    user_id        String
    active_expires BigInt
    idle_expires   BigInt

    auth_user AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
    @@map("auth_session")
}

model LearningSet {
    id          String     @id @default(cuid())
    
    name        String
    description String
    visibility  Visibility

    cards Card[]

    userId String
    user   AuthUser   @relation(fields: [userId], references: [id])
}

model Card {
    id String @id @default(cuid())

    term       String
    definition String

    learningSetId String
    learningSet   LearningSet @relation(fields: [learningSetId], references: [id])
}

enum Visibility {
    PUBLIC
    UNLISTED
    PRIVATE
}
